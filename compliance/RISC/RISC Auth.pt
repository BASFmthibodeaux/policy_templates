name "RISC Policy Example"
rs_pt_ver 20180301
type "policy"
short_description "Example RISC Calls"
long_description "Version: 1.0"
category "Compliance"
severity "low"

##THIS POLICY DOES NOTHING.  ITS AN EXAMPLE
##RUN WITH fpt retrieve_data to get the datasets after supplying credentials.

#Provide your RISC user name. E.g. (somebody@flexera.com)
parameter "param_userid" do
  type "string"
  label "RISC User ID"
end

#Provide your RISC Password.  Hash it as per the guide here (https://portal.riscnetworks.com/app/documentation/?path=/using-the-platform/restful-api-access/)
# Hash is MD5 of password, UCASE all letters, Prepend the API Key, MD5 the new string. Example : md5(concat(apiKey,to_upper(md5(password))));
parameter "param_password" do
  type "string"
  label "RISC Hashed Password"
end

#Whats your API Key provided by RISC
parameter "param_acode" do
  type "string"
  label "RISC Assessment Code"
end

# Risc Auth Token.  Stays good for hours if in constant use
datasource "ds_riscauth" do
  request do
    verb "POST"
    host "api.riscnetworks.com"
    path "/1_0/getAuthToken"
    body_field "userid", $param_userid
    body_field "password", $param_password
    body_field "assessmentcode", $param_acode
    header "Content-Type", "application/json"
  end
  result do
    encoding "json"
    field "token", jmes_path(response, "token")
  end
end

################################RISC GET  ASSETS SUMMARY CALL
#https://api.riscnetworks.com/docs.html#!/docs/getAssetSummary
#This retieves all the stacks
#NO DEPENDENCY

datasource "ds_riscgetAssSummary" do
  request do
    run_script $js_riscgetAssSummary, $ds_riscauth, $param_acode
  end

  result do
    encoding "json"
    field "assets", jmes_path(response, "assets")
  end
end

script "js_riscgetAssSummary", type: "javascript" do
  result "request"
  parameters "ds_riscauth", "param_acode"

  code <<-EOS
    
    var authtoken = ds_riscauth.token
    request = {
      "host": "api.riscnetworks.com",
      "verb": "GET",
      "path": "/1_0/assets/getSummary",
      "headers": {
        "User-Agent": "RS Policies",
        "Content-Type": "application/json",
        "assessmentcode": param_acode,
        "token":  authtoken 
      }
    }

  EOS
end

# ################################RISC GET STACK SUMMARY CALL
#Call getting the stack summary.  Used to feed other calls
##https://api.riscnetworks.com/docs.html#!/docs/getStackSummary
#NO DEPENDENCY

datasource "ds_riscgetStackSummary" do
  request do
    run_script $js_riscgetStackSummary, $ds_riscauth, $param_acode
  end

  result do
    encoding "json"
    collect jmes_path(response, "assets[*]") do
      field "confirmed", jmes_path(col_item, "confirmed")
      field "confirmedby", jmes_path(col_item, "confirmedby")
      field "licensed", jmes_path(col_item, "licensed")
      field "num_members_with_failed_checks", jmes_path(col_item, "num_members_with_failed_checks")
      field "num_stack_members", jmes_path(col_item, "num_stack_members")
      field "stack_name", jmes_path(col_item, "stack_name")
      field "stackid", jmes_path(col_item, "stackid")
      field "tags", jmes_path(col_item, "tags")
    end
  end
end

script "js_riscgetStackSummary", type: "javascript" do
  result "request"
  parameters "ds_riscauth", "param_acode"

  code <<-EOS
    
    var authtoken = ds_riscauth.token
    request = {
      "host": "api.riscnetworks.com",
      "verb": "GET",
      "path": "/1_0/stacks/getSummary",
      "headers": {
        "User-Agent": "RS Policies",
        "Content-Type": "application/json",
        "assessmentcode": param_acode,
        "token":  authtoken 
      }
    }

  EOS
end

################################RISC GET TAGS CALL
#https://api.riscnetworks.com/docs.html#!/docs/getProviders_0
#This retrieves the tags another summary style call
#NO DEPENDENCY

datasource "ds_riscgetTags" do
  request do
    run_script $js_riscgetTags, $ds_riscauth, $param_acode
  end

  result do
    encoding "json"
    collect jmes_path(response, "tags[*]") do
      field "tagid", jmes_path(col_item, "tagid")
      field "number_applied", jmes_path(col_item, "number_applied")
      field "tagkey", jmes_path(col_item, "tagkey")
      field "tagvalue", jmes_path(col_item, "tagvalue")
    end
  end
end

script "js_riscgetTags", type: "javascript" do
  result "request"
  parameters "ds_riscauth", "param_acode"

  code <<-EOS
    var authtoken = ds_riscauth.token
    request = {
      "host": "api.riscnetworks.com",
      "verb": "GET",
      "path": "/1_0/tags/getTags",
      "headers": {
        "User-Agent": "RS Policies",
        "Content-Type": "application/json",
        "assessmentcode": param_acode,
        "token":  authtoken 
      }
    }

  EOS
end

################################RISC GET CHECKS
#https://api.riscnetworks.com/docs.html#!/docs/getUCELChecks
#This gets the list of checks ran against the devices
#NO DEPENDECY

datasource "ds_riscgetChecks" do
  request do
    run_script $js_riscgetChecks, $ds_riscauth, $param_acode
  end

  result do
    encoding "json"
    field "checks", jmes_path(response, "checks")
  end
end

script "js_riscgetChecks", type: "javascript" do
  result "request"
  parameters "ds_riscauth", "param_acode"

  code <<-EOS

    var authtoken = ds_riscauth.token
    request = {
      "host": "api.riscnetworks.com",
      "verb": "GET",
      "path": "/1_0/ucel/getChecks",
      "headers": {
        "User-Agent": "RS Policies",
        "Content-Type": "application/json",
        "assessmentcode": param_acode,
        "token":  authtoken
      }
    }

  EOS
end

################################RISC GET ASSESMENT BY TAG
#This retrieves the assesments by the tag.  This is an EXAMPLE call, and as such only retrieves the 11th tag from the array you would want to itterate to get the full list
#https://api.riscnetworks.com/docs.html#!/docs/getAssetsByTag
#Dependent on ds_riscgetTags

datasource "ds_riscgetAssByTag" do
  request do
    run_script $js_riscgetAssByTag, $ds_riscauth, $param_acode, $ds_riscgetTags
  end

  result do
    encoding "json"
    field "assets", jmes_path(response, "assets")
  end
end

script "js_riscgetAssByTag", type: "javascript" do
  result "request"
  parameters "ds_riscauth", "param_acode", "ds_riscgetTags"

  code <<-EOS
    //Only gets the first tagged asset for an example.
    var tagIdFirst = ds_riscgetTags[10]

    var authtoken = ds_riscauth.token
    request = {
      "host": "api.riscnetworks.com",
      "verb": "GET",
      "path": "/1_0/assets/getAssets/byTag/"+ tagIdFirst["tagid"],
      "headers": {
        "User-Agent": "RS Policies",
        "Content-Type": "application/json",
        "assessmentcode": param_acode,
        "token":  authtoken
      }
    }

  EOS
end

################################RISC GET STACK CONNECTIVITY
#https://api.riscnetworks.com/docs.html#!/docs/getStackConnectivity
#This will get the connectivity for the Stack.  This is an example pulls the 11th item only.  Itterate for full results.
#dependent on ds_riscgetStackSummary

datasource "ds_riscgetStackConnect" do
  request do
    run_script $js_riscgetStackConnect, $ds_riscauth, $param_acode, $ds_riscgetStackSummary
  end

  result do
    encoding "json"
    field "connectivity", jmes_path(response, "connectivity")
  end
end

script "js_riscgetStackConnect", type: "javascript" do
  result "request"
  parameters "ds_riscauth", "param_acode", "ds_riscgetStackSummary"

  code <<-EOS
    //Only gets the first tagged asset for an example.
    var stackIdFirst = ds_riscgetStackSummary[10]
    var authtoken = ds_riscauth.token
    request = {
      "host": "api.riscnetworks.com",
      "verb": "GET",
      "path": "/1_0/stacks/getConnectivity/"+ stackIdFirst["stackid"],
      "headers": {
        "User-Agent": "RS Policies",
        "Content-Type": "application/json",
        "assessmentcode": param_acode,
        "token":  authtoken
      }
    }

  EOS
end

################################RISC GET ASSET BY STACK
#https://api.riscnetworks.com/docs.html#!/docs/getAssetsByStack_0
#This will pull the assets by stack.
#Example only... gets the 11th item
#dependent on ds_riscgetStackSummary

datasource "ds_riscgetAssByStack" do
  request do
    run_script $js_riscgetAssByStack, $ds_riscauth, $param_acode, $ds_riscgetStackSummary
  end

  result do
    encoding "json"
    field "assets", jmes_path(response, "assets")
  end
end

script "js_riscgetAssByStack", type: "javascript" do
  result "request"
  parameters "ds_riscauth", "param_acode", "ds_riscgetStackSummary"

  code <<-EOS
    //Only gets the first tagged asset for an example.
    var stackIdFirst = ds_riscgetStackSummary[10]
    var authtoken = ds_riscauth.token
    request = {
      "host": "api.riscnetworks.com",
      "verb": "GET",
      "path": "/1_0/assets/getAssets/byStack/"+ stackIdFirst["stackid"],
      "headers": {
        "User-Agent": "RS Policies",
        "Content-Type": "application/json",
        "assessmentcode": param_acode,
        "token":  authtoken
      }
    }

  EOS
end

################################RISC GET INTERNAL DEVICE CONNECTIVITY
#https://api.riscnetworks.com/docs.html#!/docs/getStackDeviceConnectivity
#Gets the device connectivity
#Example only.. retrieves the 11th item
#Dependent on ds_riscgetStackSummary

datasource "ds_riscgetInternalDeviceConnectivity" do
  request do
    run_script $js_getInternalDeviceConnectivity, $ds_riscauth, $param_acode, $ds_riscgetStackSummary
  end

  result do
    encoding "json"
    field "connectivity", jmes_path(response, "connectivity")
  end
end

script "js_getInternalDeviceConnectivity", type: "javascript" do
  result "request"
  parameters "ds_riscauth", "param_acode", "ds_riscgetStackSummary"

  code <<-EOS
    //Only gets the first tagged asset for an example.
    var stackIdFirst = ds_riscgetStackSummary[10]
    var authtoken = ds_riscauth.token
    request = {
      "host": "api.riscnetworks.com",
      "verb": "GET",
      "path": "/1_0/stacks/getInternalDeviceConnectivity/"+ stackIdFirst["stackid"],
      "headers": {
        "User-Agent": "RS Policies",
        "Content-Type": "application/json",
        "assessmentcode": param_acode,
        "token":  authtoken
      }
    }

  EOS
end

#This does nothing... just a placeholder.
policy "ds_go" do
  validate $ds_riscgetInternalDeviceConnectivity do
    summary_template "Azure Resources out of compliance"
    detail_template <<-EOS
# Azure Resources out of compliance
| Name | Status | Time Stopped | Days Elapsed
| ----------------------- | ----------------------- | ------------- | --------------- |
EOS

    check false
  end
end
